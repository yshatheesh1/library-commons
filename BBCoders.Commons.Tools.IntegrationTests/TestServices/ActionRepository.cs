//------------------------------------------------------------------------------
// <auto-generated>
//
// Manual changes to this file may cause unexpected behavior in your application.
// Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using MySqlConnector;

namespace BBCoders.Example.DataServices
{
    public class ActionRepository
    {
        private readonly string _connectionString;
        public ActionRepository(string connectionString){ this._connectionString = connectionString; }
        public async Task<ActionModel> SelectAction(Int64 Id)
        {
            using(var connection = new MySqlConnection(_connectionString))
            {
                await connection.OpenAsync();
                string sql = @"SELECT * FROM `Actions` AS `a` WHERE `a`.`Id` = @Id";
                var cmd = new MySqlCommand(sql, connection);
                cmd.Parameters.AddWithValue("@Id", Id);
                return await GetActionResultSet(cmd);
            }
        }
        private async Task<ActionModel> GetActionResultSet(MySqlCommand cmd, ActionModel result = null)
        {
            var reader = await cmd.ExecuteReaderAsync();
            while (await reader.ReadAsync())
            {
                if(result == null) result = new ActionModel();
                result.Id = (Int64)reader["Id"];
                result.ActionId = (Byte[])reader["ActionId"];
                result.Name = (String)reader["Name"];
            }
            reader.Close();
            return result;
        }
        public async Task<ActionModel> InsertAction(ActionModel ActionModel)
        {
            using(var connection = new MySqlConnection(_connectionString))
            {
                await connection.OpenAsync();
                string sql = @"INSERT INTO `Actions` (`ActionId`, `Name`) VALUES (@ActionId, @Name);
                SELECT * FROM `Actions` AS `a` WHERE `a`.`Id` = LAST_INSERT_ID()";
                var cmd = new MySqlCommand(sql, connection);
                cmd.Parameters.AddWithValue("@ActionId", ActionModel.ActionId);
                cmd.Parameters.AddWithValue("@Name", ActionModel.Name);
                return await GetActionResultSet(cmd, ActionModel);
            }
        }
        public async Task<int> UpdateAction(ActionModel ActionModel)
        {
            using(var connection = new MySqlConnection(_connectionString))
            {
                await connection.OpenAsync();
                string sql = @"UPDATE `Actions` AS `a` SET `a`.`ActionId` = @ActionId, `a`.`Name` = @Name WHERE `a`.`Id` = @Id;";
                var cmd = new MySqlCommand(sql, connection);
                cmd.Parameters.AddWithValue("@Id", ActionModel.Id);
                cmd.Parameters.AddWithValue("@ActionId", ActionModel.ActionId);
                cmd.Parameters.AddWithValue("@Name", ActionModel.Name);
                return await cmd.ExecuteNonQueryAsync();
            }
        }
        public async Task<int> DeleteAction(Int64 Id)
        {
            using(var connection = new MySqlConnection(_connectionString))
            {
                await connection.OpenAsync();
                string sql = @"DELETE FROM `Actions` AS `a` WHERE `a`.`Id` = @Id";
                var cmd = new MySqlCommand(sql, connection);
                cmd.Parameters.AddWithValue("@Id", Id);
                return await cmd.ExecuteNonQueryAsync();
            }
        }
    }
}
